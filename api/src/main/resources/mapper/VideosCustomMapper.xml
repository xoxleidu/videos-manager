<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dulei.mapper.VideosCustomMapper" >
  <resultMap id="BaseResultMap" type="com.dulei.pojo.redis.VideosVO" >
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="VARCHAR" />
    <result column="audio_id" property="audioId" jdbcType="VARCHAR" />
    <result column="video_desc" property="videoDesc" jdbcType="VARCHAR" />
    <result column="video_path" property="videoPath" jdbcType="VARCHAR" />
    <result column="video_seconds" property="videoSeconds" jdbcType="REAL" />
    <result column="video_width" property="videoWidth" jdbcType="INTEGER" />
    <result column="video_height" property="videoHeight" jdbcType="INTEGER" />
    <result column="cover_path" property="coverPath" jdbcType="VARCHAR" />
    <result column="like_counts" property="likeCounts" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <!-- 查询所有视频or我发的视频(userId判断)or模糊查询所有视频(videoDesc判断) -->
  <select id="queryAllVideos" resultMap="BaseResultMap" parameterType="String">

      select v.*,u.face_image as face_image,u.nickname as nickname from videos v
      left join users u on u.id = v.user_id
      where
          1 = 1
          <if test=" videoDesc != null and videoDesc != '' ">
            and v.video_desc like '%${videoDesc}%'
          </if>
          <if test=" userId != null and userId != '' ">
            and v.user_id = #{userId}
          </if>
          and v.status = 1
          order by v.create_time desc

  </select>

  <!-- 查询我关注的人发的视频 -->
  <select id="queryAllVideosByFollows" resultMap="BaseResultMap" parameterType="String">
      select v.*,u.face_image as face_image,u.nickname as nickname from videos v
      left join users u on v.user_id = u.id
      where
          v.user_id in (select uf.user_id from users_fans uf where uf.fan_id = #{userId})
          and v.status = 1
          order by v.create_time desc
  </select>

  <!-- 查询我喜欢的视频 -->
  <select id="queryAllVideosByLikes" resultMap="BaseResultMap" parameterType="String">
      select *
      from videos v
      where
          v.id in (select ulv.video_id from users_like_videos ulv where ulv.user_id = #{userId})
          and v.status = 1
          order by v.create_time desc
  </select>

  <!-- 查询我喜欢的视频old -->
  <!--<select id="queryAllVideosByLikes" resultMap="BaseResultMap" parameterType="INTEGER">-->
    <!--select v.*,u.face_image as face_image,u.nickname as nickname from videos v-->
    <!--left join users u on u.id = v.user_id-->
    <!--where-->
    <!--v.status = 1-->
    <!--and TO_DAYS(NOW()) - TO_DAYS(v.create_time) &lt;= #{dayBy}-->
    <!--order by v.like_counts desc-->
  <!--</select>-->

  <update id="addLikeCounts" parameterType="String">
    update videos set like_counts=like_counts+1 where id=#{videoId}
  </update>

  <update id="delLikeCounts" parameterType="String">
    update videos set like_counts=like_counts-1 where id=#{videoId}
  </update>

</mapper>